import { Component, h } from 'preact';
import { renderToString } from 'preact-render-to-string';
import { S as StaticHtml } from '../../common/static-html-b86b4ea6.js';

function check(Component$1, props, children) {
  if (typeof Component$1 !== 'function') return false;

  if (Component$1.prototype != null && typeof Component$1.prototype.render === 'function') {
    return Component.isPrototypeOf(Component$1);
  }

  const { html } = renderToStaticMarkup(Component$1, props, children);

  if (typeof html !== 'string') {
    return false;
  }

  // There are edge cases (SolidJS) where Preact *might* render a string,
  // but components would be <undefined></undefined>

  return !/\<undefined\>/.test(html);
}

function renderToStaticMarkup(Component, props, children) {
  const html = renderToString(h(Component, { ...props, children: h(StaticHtml, { value: children }), innerHTML: children }));
  return { html };
}

var server = {
  check,
  renderToStaticMarkup,
};

export default server;
