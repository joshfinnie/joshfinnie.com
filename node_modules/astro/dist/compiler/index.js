var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
import path from "path";
import {renderMarkdownWithFrontmatter} from "@astrojs/markdown-support";
import {parse} from "@astrojs/parser";
import {transform} from "./transform/index.js";
import {codegen} from "./codegen/index.js";
import {scopeRule} from "./transform/postcss-scoped-styles/index.js";
async function convertAstroToJsx(template, opts) {
  const {filename} = opts;
  const ast = parse(template, {
    filename
  });
  await transform(ast, opts);
  return await codegen(ast, opts);
}
async function convertMdToAstroSource(contents, {filename}, opts) {
  let _a = await renderMarkdownWithFrontmatter(contents, opts), {
    content,
    frontmatter: _b
  } = _a, _c = _b, {layout} = _c, frontmatter = __objRest(_c, ["layout"]), data = __objRest(_a, [
    "content",
    "frontmatter"
  ]);
  if (frontmatter["astro"] !== void 0) {
    throw new Error(`"astro" is a reserved word but was used as a frontmatter value!
	at ${filename}`);
  }
  const contentData = __spreadValues(__spreadValues({}, frontmatter), data);
  const stringifiedSetupContext = JSON.stringify(contentData).replace(/\<\/script\>/g, `</scrip" + "t>`);
  return `---
${layout ? `import {__renderPage as __layout} from '${layout}';` : "const __layout = undefined;"}
export const __content = ${stringifiedSetupContext};
---
${content}`;
}
async function convertMdToJsx(contents, {compileOptions, filename, fileID}) {
  const raw = await convertMdToAstroSource(contents, {filename}, compileOptions.astroConfig.markdownOptions);
  const convertOptions = {compileOptions, filename, fileID};
  return await convertAstroToJsx(raw, convertOptions);
}
async function transformFromSource(contents, {compileOptions, filename, projectRoot}) {
  const fileID = path.relative(projectRoot, filename);
  switch (true) {
    case filename.slice(-6) === ".astro":
      return await convertAstroToJsx(contents, {compileOptions, filename, fileID});
    case filename.slice(-3) === ".md":
      return await convertMdToJsx(contents, {compileOptions, filename, fileID});
    default:
      throw new Error("Not Supported!");
  }
}
async function compileComponent(source, {compileOptions, filename, projectRoot}) {
  const result = await transformFromSource(source, {compileOptions, filename, projectRoot});
  const {mode} = compileOptions;
  const {hostname, port} = compileOptions.astroConfig.devOptions;
  const devSite = `http://${hostname}:${port}`;
  const site = compileOptions.astroConfig.buildOptions.site || devSite;
  const fileID = path.join("/_astro", path.relative(projectRoot, filename));
  const fileURL = new URL("." + fileID, mode === "production" ? site : devSite);
  let moduleJavaScript = `
import fetch from 'node-fetch';
${result.imports.join("\n")}

if(!('fetch' in globalThis)) {
  globalThis.fetch = fetch;
}

${""}
const __TopLevelAstro = {
  site: new URL(${JSON.stringify(site)}),
  fetchContent: (globResult) => fetchContent(globResult, import.meta.url),
  resolve(...segments) {
    return segments.reduce(
      (url, segment) => new URL(segment, url),
      new URL(${JSON.stringify(fileURL)})
    ).pathname
  },
};
const Astro = __TopLevelAstro;

${result.hasCustomElements ? `
const __astro_element_registry = new AstroElementRegistry({
  candidates: new Map([${Array.from(result.customElementCandidates).map(([identifier, url]) => `[${identifier}, '${url}']`).join(", ")}])
});
`.trim() : ""}

${result.getStaticPaths || ""}

// \`__render()\`: Render the contents of the Astro module.
import { h, Fragment } from 'astro/dist/internal/h.js';
import { __astro_hoisted_scripts } from 'astro/dist/internal/__astro_hoisted_scripts.js';

const __astroScripts = __astro_hoisted_scripts([${result.components.map((n) => `typeof ${n} !== 'undefined' && ${n}`)}], ${JSON.stringify(result.hoistedScripts)});
const __astroInternal = Symbol('astro.internal');
const __astroContext = Symbol.for('astro.context');
async function __render(props, ...children) {
  const Astro = Object.create(__TopLevelAstro, {
    props: {
      value: props,
      enumerable: true
    },
    pageCSS: {
      value: (props[__astroContext] && props[__astroContext].pageCSS) || [],
      enumerable: true
    },
    pageScripts: {
      value: (props[__astroContext] && props[__astroContext].pageScripts) || [],
      enumerable: true
    },
    isPage: {
      value: (props[__astroInternal] && props[__astroInternal].isPage) || false,
      enumerable: true
    },
    request: {
      value: (props[__astroContext] && props[__astroContext].request) || {},
      enumerable: true
    },
  });

  ${result.script}
  return h(Fragment, null, ${result.html});
}
export default { isAstroComponent: true, __render, [Symbol.for('astro.hoistedScripts')]: __astroScripts };

// \`__renderPage()\`: Render the contents of the Astro module as a page. This is a special flow,
// triggered by loading a component directly by URL.
export async function __renderPage({request, children, props, css, scripts}) {
  const currentChild = {
    isAstroComponent: true,
    layout: typeof __layout === 'undefined' ? undefined : __layout,
    content: typeof __content === 'undefined' ? undefined : __content,
    __render,
  };

  const isLayout = (__astroContext in props);
  if(!isLayout) {
    let astroRootUIDCounter = 0;
    Object.defineProperty(props, __astroContext, {
      value: {
        pageCSS: css,
        request,
        createAstroRootUID(seed) { return seed + astroRootUIDCounter++; },
        pageScripts: scripts,
      },
      writable: false,
      enumerable: false
    });
  }

  Object.defineProperty(props, __astroInternal, {
    value: {
      isPage: !isLayout
    },
    writable: false,
    enumerable: false
  });

  const childBodyResult = await currentChild.__render(props, children);

  // find layout, if one was given.
  if (currentChild.layout) {
    return currentChild.layout({
      request,
      props: {content: currentChild.content, [__astroContext]: props[__astroContext]},
      children: [childBodyResult],
    });
  }

  return childBodyResult;
};

${result.exports.join("\n")}
`;
  return {
    result,
    contents: moduleJavaScript,
    css: result.css
  };
}
export {
  compileComponent,
  convertAstroToJsx,
  convertMdToAstroSource,
  scopeRule
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2NvbXBpbGVyL2luZGV4LnRzIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQWVBLGlDQUF3QyxVQUFrQixNQUFxRDtBQUM3RyxRQUFNLENBQUUsWUFBYTtBQUdyQixRQUFNLE1BQU0sTUFBTSxVQUFVO0FBQUEsSUFDMUI7QUFBQTtBQUlGLFFBQU0sVUFBVSxLQUFLO0FBR3JCLFNBQU8sTUFBTSxRQUFRLEtBQUs7QUFBQTtBQU01QixzQ0FBNkMsVUFBa0IsQ0FBRSxXQUFrQyxNQUFrRDtBQUNuSixNQUlJLFdBQU0sOEJBQThCLFVBQVUsT0FGbkM7QUFBQSxJQURiO0FBQUEsSUFDQSxhQUFhO0FBQUEsTUFFWCxJQUZXLFNBQUUsV0FBRixJQUFhLHdCQUFiLElBQWEsQ0FBWCxZQUNaLGlCQUNELElBREM7QUFBQSxJQUZIO0FBQUEsSUFDQTtBQUFBO0FBSUYsTUFBSSxZQUFZLGFBQWEsUUFBVztBQUN0QyxVQUFNLElBQUksTUFBTTtBQUFBLE1BQXlFO0FBQUE7QUFFM0YsUUFBTSxjQUFtQixrQ0FDcEIsY0FDQTtBQUlMLFFBQU0sMEJBQTBCLEtBQUssVUFBVSxhQUFhLFFBQVEsaUJBQWlCO0FBRXJGLFNBQU87QUFBQSxFQUNQLFNBQVMsMkNBQTJDLGFBQWE7QUFBQSwyQkFDeEM7QUFBQTtBQUFBLEVBRXpCO0FBQUE7QUFPRiw4QkFDRSxVQUNBLENBQUUsZ0JBQWdCLFVBQVUsU0FDRjtBQUMxQixRQUFNLE1BQU0sTUFBTSx1QkFBdUIsVUFBVSxDQUFFLFdBQVksZUFBZSxZQUFZO0FBQzVGLFFBQU0saUJBQWlCLENBQUUsZ0JBQWdCLFVBQVU7QUFDbkQsU0FBTyxNQUFNLGtCQUFrQixLQUFLO0FBQUE7QUFJdEMsbUNBQ0UsVUFDQSxDQUFFLGdCQUFnQixVQUFVLGNBQ0Y7QUFDMUIsUUFBTSxTQUFTLEtBQUssU0FBUyxhQUFhO0FBQzFDLFVBQVE7QUFBQSxTQUNELFNBQVMsTUFBTSxRQUFRO0FBQzFCLGFBQU8sTUFBTSxrQkFBa0IsVUFBVSxDQUFFLGdCQUFnQixVQUFVO0FBQUEsU0FFbEUsU0FBUyxNQUFNLFFBQVE7QUFDMUIsYUFBTyxNQUFNLGVBQWUsVUFBVSxDQUFFLGdCQUFnQixVQUFVO0FBQUE7QUFHbEUsWUFBTSxJQUFJLE1BQU07QUFBQTtBQUFBO0FBWXRCLGdDQUF1QyxRQUFnQixDQUFFLGdCQUFnQixVQUFVLGNBQWdFO0FBQ2pKLFFBQU0sU0FBUyxNQUFNLG9CQUFvQixRQUFRLENBQUUsZ0JBQWdCLFVBQVU7QUFDN0UsUUFBTSxDQUFFLFFBQVM7QUFDakIsUUFBTSxDQUFFLFVBQVUsUUFBUyxlQUFlLFlBQVk7QUFDdEQsUUFBTSxVQUFVLFVBQVUsWUFBWTtBQUN0QyxRQUFNLE9BQU8sZUFBZSxZQUFZLGFBQWEsUUFBUTtBQUU3RCxRQUFNLFNBQVMsS0FBSyxLQUFLLFdBQVcsS0FBSyxTQUFTLGFBQWE7QUFDL0QsUUFBTSxVQUFVLElBQUksSUFBSSxNQUFNLFFBQVEsU0FBUyxlQUFlLE9BQU87QUFHckUsTUFBSSxtQkFBbUI7QUFBQTtBQUFBLEVBRXZCLE9BQU8sUUFBUSxLQUFLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTTRFO0FBQUE7QUFBQSxrQkFFaEYsS0FBSyxVQUFVO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFLakIsS0FBSyxVQUFVO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTzdCLE9BQU8sb0JBQ0g7QUFBQTtBQUFBLHlCQUVtQixNQUFNLEtBQUssT0FBTyx5QkFDdEMsSUFBSSxDQUFDLENBQUMsWUFBWSxTQUFTLElBQUksZ0JBQWdCLFNBQy9DLEtBQUs7QUFBQTtBQUFBLEVBRVIsU0FDSTtBQUFBO0FBQUEsRUFHSixPQUFPLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrREFNdUIsT0FBTyxXQUFXLElBQUksQ0FBQyxNQUFNLFVBQVUsd0JBQXdCLFVBQVUsS0FBSyxVQUFVLE9BQU87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUEyQjdJLE9BQU87QUFBQSw2QkFDa0IsT0FBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQW1EbEMsT0FBTyxRQUFRLEtBQUs7QUFBQTtBQUdwQixTQUFPO0FBQUEsSUFDTDtBQUFBLElBQ0EsVUFBVTtBQUFBLElBQ1YsS0FBSyxPQUFPO0FBQUE7QUFBQTsiLAogICJuYW1lcyI6IFtdCn0K
