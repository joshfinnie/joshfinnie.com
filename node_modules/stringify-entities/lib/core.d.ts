/**
 * @typedef {Object} CoreOptions
 * @property {string[]} [subset=[]] Whether to only escape the given subset of characters (`string[]`)
 * @property {boolean} [escapeOnly=false] Whether to only escape possibly dangerous characters (`boolean`, default: `false`). Those characters are `"`, `&`, `'`, `<`, `>`, and `` ` ``
 *
 * @typedef {Object} FormatOptions
 * @property {function (number, number, CoreWithFormatOptions): string} format
 *
 * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions
 */
/**
 * Encode special characters in `value`.
 *
 * @param {string} value
 * @param {CoreWithFormatOptions} [options]
 * @returns {string}
 */
export function core(value: string, options?: CoreWithFormatOptions): string
export type CoreOptions = {
  /**
   * Whether to only escape the given subset of characters (`string[]`)
   */
  subset?: string[]
  /**
   * Whether to only escape possibly dangerous characters (`boolean`, default: `false`). Those characters are `"`, `&`, `'`, `<`, `>`, and `` ` ``
   */
  escapeOnly?: boolean
}
export type FormatOptions = {
  format: (arg0: number, arg1: number, arg2: CoreWithFormatOptions) => string
}
export type CoreWithFormatOptions = CoreOptions &
  FormatOptions &
  import('./util/format-smart.js').FormatSmartOptions
