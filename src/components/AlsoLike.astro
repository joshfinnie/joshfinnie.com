---
import { getCollection } from "astro:content";

import BlogPostPreviewLite from "./BlogPostPreviewLite.astro";

interface Props {
  slug: string;
  tags: string[];
}

const { slug, tags } = Astro.props;
const allPosts = await getCollection("blog");

const excludedTags: string[] = ["blog", "tutorial", "news", "announcement"];
const finalTags = tags.filter((tag: string) => !excludedTags.includes(tag));

const posts = allPosts
  .filter((post) => post.slug != slug && post.data.tags?.filter((tag: string) => finalTags.includes(tag)).length > 0)
  .map((post) => ({
    ...post,
    sameTagCount: post.data.tags.filter((tag: string) => finalTags.includes(tag)).length,
  }))
  .sort((a, b) => {
    if (a.sameTagCount > b.sameTagCount) return -1;
    if (b.sameTagCount > a.sameTagCount) return 1;

    if (a.data.date > b.data.date) return -1;
    if (a.data.date < b.data.date) return 1;

    return 0;
  })
  .slice(0, 5);
---

{
  posts.length && (
    <div class="prose prose-zinc dark:prose-invert mt-5 p-5 rounded-lg max-w-none">
      <h2 class="text-center">You might also enjoy?</h2>
      {posts.map((post) => (
        <Fragment key={post.id}>
          <BlogPostPreviewLite slug={post.slug} />
        </Fragment>
      ))}
    </div>
  )
}
