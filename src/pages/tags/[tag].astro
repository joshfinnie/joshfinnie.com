---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import BaseLayout from "@src/layouts/BaseLayout.astro";
import BlogPostPreview from "@components/BlogPostPreview.astro";

// collection
export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  let allTagUnique = [...new Set(allPosts.map((p) => p.data.tags))];
  let allFlatTagUnique = [...new Set(allTagUnique.flat())];
  return allFlatTagUnique.map((tag) => ({ params: { tag }, props: { allPosts } }));
}

const { params } = Astro;
const { allPosts } = Astro.props;

const posts = allPosts
  .filter((post: CollectionEntry<"blog">) => post.data.tags?.includes(params.tag))
  .sort((a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) => Date.parse(b.data.date) - Date.parse(a.data.date));
---

<BaseLayout>
  <article id="main-content">
    <h1 class="font-bold text-3xl mb-10 mt-5 dark:text-white">Blog Posts taged with {params.tag}</h1>
    <main class="prose dark:prose-invert max-w-none">
      {
        posts.map((p) => (
          <Fragment key={p.id}>
            <BlogPostPreview id={p.id} />
          </Fragment>
        ))
      }
      <div class="flex justify-end">
        <a href="/tags/" title="All Tags">All Tags &rarr;</a>
      </div>
    </main>
  </article>
</BaseLayout>
